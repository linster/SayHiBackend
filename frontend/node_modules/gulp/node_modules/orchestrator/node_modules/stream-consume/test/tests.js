/*jshint node:true */
/*global describe:false, it:false */
"use strict";

var consume = require('../');
var Stream = require('stream');
var Readable = Stream.Readable;
var Writable = Stream.Writable;
var Duplex = Stream.Duplex;
var should = require('should');
var through = require('through2');
require('mocha');

describe('stream-consume', function() {

    it('should cause a Readable stream to complete if it\'s not piped anywhere', function(done) {
        var rs = new Readable({highWaterMark: 2});
        var a = 0;
        var ended = false;
        rs._read = function() {
            if (a++ < 100) {
                rs.push(a + "");
            } else {
                ended = true;
                rs.push(null);
            }
        };

        rs.on("end", function() {
            a.should.be.above(99);
            ended.should.be.true;
            done();
        });

        consume(rs);
    });

    it('should work with Readable streams in objectMode', function(done) {
        var rs = new Readable({highWaterMark: 2, objectMode: true});
        var a = 0;
        var ended = false;
        rs._read = function() {
            if (a++ < 100) {
                rs.push(a);
            } else {
                ended = true;
                rs.push(null);
            }
        };

        rs.on("end", function() {
            a.should.be.above(99);
            ended.should.be.true;
            done();
        });

        consume(rs);
    });

    it('should not interfere with a Readable stream that is piped